{
  "clone_instances": 2,
  "clone_loc": 16,
  "files": [
    {
      "filePath": "/server/src/views.js",
      "start_line": "33",
      "end_line": "49",
      "codePart": {
        "part": "  resources.forEach(resource => {
            locations.push(`${__dirname}/resources/${resource}/views`);
          });
          // console.log(\"Initialising the single view from the single page application.
        ..\");
          const clientLocation = '../../client';
          locations.push(`${__dirname}/${clientLocation}`);
          const ejsOptions = { delimiter: '?' };
          app.set('views', locations);
          app.use('/', serveStatic(`${__dirname}/${clientLocation}`)); // Single Page Ap
        plication
          // Reference: https://stackoverflow.com/questions/43261318/node-js-express-how
        -do-i-render-a-file-that-is-inside-views-subfolder
          app.set('view engine', 'ejs');
          app.engine('html', (path, data, cb) => {
            renderFile(path, data, ejsOptions, cb);
          });
          // Reference: https://github.com/mde/ejs/wiki/Using-EJS-with-Express
          return app;
        };
        const newTask = {
        \ttitle: \"New Task Cyclopt-Testing\",
        \tbody: \"\",
        \tlabels: [],
        \tassignees: [],
        \tepics: [],",
        "requestedStart": 7,
        "requestedEnd": 22
      }
    },
    {
      "filePath": "/server/src/app.js",
      "start_line": "84",
      "end_line": "100",
      "codePart": {
        "part": "  const options = {
            stream: accessLogStream,
          };
          app.use(morgan(format, options));
        }
        const aTask = {
        \ttitle: \"New Task Cyclopt-Testing\",
        \tbody: \"\",
        \tlabels: [],
        \tassignees: [],
        \tepics: [],
        \treviewers: [],
        \tpoints: {
        \t\ttotal: 1,
        \t\tdone: 1,
        \t\treview: 1,
        \t},
        \tdueDate: dayjs().add(1, \"day\").toString(),
        \tpriority: \"none\",
        \tblocked: false,
        \tblockedBy: null,
        \tsprint: null,
        \tpinned: false,
        };",
        "requestedStart": 7,
        "requestedEnd": 22
      }
    }
  ]
}